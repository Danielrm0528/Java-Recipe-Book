/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package main.java.gui;

import Recetario.Controladora;
import Recetario.Dificultad;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel
 */
public class VentanaQueCocinar extends javax.swing.JDialog {

    /**
     * Creates new form VentanaQueCocinar
     */
    public VentanaQueCocinar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        cargarDatos();
    }
    
    
    
    public void cargarDatos() {
      Controladora c = Controladora.getInstance();
      Map<String,Integer> recetasOrdenadas = null;
      String selecEtiqueta = "";
      
      try {
          recetasOrdenadas = c.verListaRecetasOrdenadasFaltante();
      } catch (Exception e) {
          JOptionPane.showMessageDialog(this, e.getMessage());   
      }
      DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
      model.setRowCount(0);
      
        
      if(duracionCheck.isSelected()) {
           if("0-30 mins".equals((String)duraciones.getSelectedItem())) {
               try {
                   recetasOrdenadas = c.filtrarDuracion(1);
               } catch (Exception e) {
                   JOptionPane.showMessageDialog(this, e.getMessage()); 
               }
           } else if ("30-60 mins".equals((String)duraciones.getSelectedItem())) {
               try {
                   recetasOrdenadas = c.filtrarDuracion(2);
               } catch (Exception e) {
                   JOptionPane.showMessageDialog(this, e.getMessage()); 
               }
           } else {
              try {
                   recetasOrdenadas = c.filtrarDuracion(3);
               } catch (Exception e) {
                   JOptionPane.showMessageDialog(this, e.getMessage()); 
               } 
           }
      } else if(dificultadCheck.isSelected()) {
          if("Facil".equals((String)dificultades.getSelectedItem())) {
              try { 
                  recetasOrdenadas = c.filtrarDificultad(Dificultad.FACIL);
              } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, e.getMessage()); 
              }
          } else if("Medio".equals((String)dificultades.getSelectedItem())) {
              try { 
                  recetasOrdenadas = c.filtrarDificultad(Dificultad.MEDIO);
              } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, e.getMessage()); 
              }
          } else if("Dificil".equals((String)dificultades.getSelectedItem())) {
              try { 
                  recetasOrdenadas = c.filtrarDificultad(Dificultad.DIFICIL);
              } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, e.getMessage()); 
              }
          } else {
              try { 
                  recetasOrdenadas = c.filtrarDificultad(Dificultad.EXPERTO);
              } catch (Exception e) {
                  JOptionPane.showMessageDialog(this, e.getMessage()); 
              }
          }   
      } else if(etiquetaCheck.isSelected()) {
          try {
              selecEtiqueta = (String) etiquetas.getSelectedItem();
              System.out.println(selecEtiqueta);
              recetasOrdenadas = c.filtrarEtiqueta((String) etiquetas.getSelectedItem());
          } catch (Exception e) {
              JOptionPane.showMessageDialog(this, e.getMessage()); 
          }
      }
      
      ArrayList<String> ordenada = new ArrayList(c.verListaEtiquetas());
      Collections.sort(ordenada);
      DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
      for (String s : ordenada) {
          comboBoxModel.addElement(s);
      }
      etiquetas.setModel(comboBoxModel);
      
      etiquetas.setSelectedItem(selecEtiqueta);
      
      for (Map.Entry<String, Integer> entry : recetasOrdenadas.entrySet()) {
            String key = entry.getKey();
            String value;
            if(entry.getValue() == 0) {
               value = "Todo \u2713";
            } else {
                value = "Faltan " + entry.getValue();
            }
            model.addRow(new Object[]{key, value});
        }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        duracionCheck = new javax.swing.JRadioButton();
        dificultadCheck = new javax.swing.JRadioButton();
        etiquetaCheck = new javax.swing.JRadioButton();
        duraciones = new javax.swing.JComboBox<>();
        dificultades = new javax.swing.JComboBox<>();
        etiquetas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ver = new javax.swing.JButton();
        volver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Que cocinar?");

        duracionCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        duracionCheck.setText("Duracion:");
        duracionCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionCheckActionPerformed(evt);
            }
        });

        dificultadCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dificultadCheck.setText("Dificultad:");
        dificultadCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificultadCheckActionPerformed(evt);
            }
        });

        etiquetaCheck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        etiquetaCheck.setText("Etiqueta:");
        etiquetaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etiquetaCheckActionPerformed(evt);
            }
        });

        duraciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0-30 mins", "30-60 mins", "60+ mins" }));
        duraciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                duracionesItemStateChanged(evt);
            }
        });
        duraciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duracionesActionPerformed(evt);
            }
        });

        dificultades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Facil", "Medio", "Dificil", "Experto" }));
        dificultades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dificultadesItemStateChanged(evt);
            }
        });

        etiquetas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                etiquetasItemStateChanged(evt);
            }
        });
        etiquetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etiquetasActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Receta", "En alacena"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        ver.setText("Ver");
        ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verActionPerformed(evt);
            }
        });

        volver.setText("Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(107, 107, 107))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duracionCheck)
                            .addComponent(dificultadCheck)
                            .addComponent(etiquetaCheck))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dificultades, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duraciones, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volver)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duracionCheck)
                    .addComponent(duraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dificultades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dificultadCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaCheck))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ver)
                    .addComponent(volver))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dificultadCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificultadCheckActionPerformed
        if (!dificultadCheck.isSelected()) {
            etiquetaCheck.setEnabled(true);
            etiquetas.setEnabled(true);
            duracionCheck.setEnabled(true);
            duraciones.setEnabled(true);
        } else {
            etiquetaCheck.setEnabled(false);
            etiquetas.setEnabled(false);
            duracionCheck.setEnabled(false);
            duraciones.setEnabled(false);
        }
        cargarDatos();
    }//GEN-LAST:event_dificultadCheckActionPerformed

    private void etiquetaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etiquetaCheckActionPerformed
        if (!etiquetaCheck.isSelected()) {
            dificultadCheck.setEnabled(true);
            dificultades.setEnabled(true);
            duracionCheck.setEnabled(true);
            duraciones.setEnabled(true);
        } else {
            dificultadCheck.setEnabled(false);
            dificultades.setEnabled(false);
            duracionCheck.setEnabled(false);
            duraciones.setEnabled(false);
        }
        cargarDatos();
    }//GEN-LAST:event_etiquetaCheckActionPerformed

    private void etiquetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etiquetasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_etiquetasActionPerformed

    private void duracionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duracionesActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
    }//GEN-LAST:event_volverActionPerformed

    private void duracionCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duracionCheckActionPerformed
        if (!duracionCheck.isSelected()) {
            etiquetaCheck.setEnabled(true);
            etiquetas.setEnabled(true);
            dificultadCheck.setEnabled(true);
            dificultades.setEnabled(true);
        } else {
            etiquetaCheck.setEnabled(false);
            etiquetas.setEnabled(false);
            dificultadCheck.setEnabled(false);
            dificultades.setEnabled(false);
        }
        cargarDatos();
    }//GEN-LAST:event_duracionCheckActionPerformed

    private void duracionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_duracionesItemStateChanged
        cargarDatos();
    }//GEN-LAST:event_duracionesItemStateChanged

    private void dificultadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dificultadesItemStateChanged
        cargarDatos();
    }//GEN-LAST:event_dificultadesItemStateChanged

    private void etiquetasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_etiquetasItemStateChanged
        cargarDatos();
    }//GEN-LAST:event_etiquetasItemStateChanged

    private void verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            VentanaAgregarReceta v = new VentanaAgregarReceta(null,true,(String) jTable1.getValueAt(jTable1.getSelectedRow(), 0),true);
            v.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una receta para ver.");    
        }
    }//GEN-LAST:event_verActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaQueCocinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaQueCocinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaQueCocinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaQueCocinar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaQueCocinar dialog = new VentanaQueCocinar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton dificultadCheck;
    private javax.swing.JComboBox<String> dificultades;
    private javax.swing.JRadioButton duracionCheck;
    private javax.swing.JComboBox<String> duraciones;
    private javax.swing.JRadioButton etiquetaCheck;
    private javax.swing.JComboBox<String> etiquetas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton ver;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
